env:
  build_java_version: 17
jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@v4.2.1
      with:
        distribution: zulu
        java-version: ${{ env.build_java_version }}
    - continue-on-error: true
      name: Build
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: build
    - continue-on-error: true
      name: Check project files unmodified
      run: "directoryState=\"$(git status --porcelain)\"\nif [ -n \"$directoryState\"\
        \ ]; then\n  echo \"Some files were modified during build. Please run the\
        \ build locally before checking in, as it ensures some source file conventions\
        \ (like copyright header).\"\n  echo \"The following files were modified:\"\
        \n  echo \"$directoryState\"\n  exit 1\nfi\n"
  integration-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Build JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: zulu
        java-version: ${{ env.build_java_version }}
    - continue-on-error: true
      name: Set up Test JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: zulu
        java-version: ${{ matrix.test_java_version }}
    - continue-on-error: true
      id: provideJdkPaths
      name: Provide installed JDKs
      uses: actions/github-script@v7
      with:
        script: "for ( let envVarName in process.env ) {\n  if (/JAVA_HOME_\\d.*64/.test(envVarName))\
          \ {\n    const version = envVarName.match(/JAVA_HOME_(\\d+).*64/)[1];\n\
          \    if (version === \"${{ matrix.test_java_version }}\") {\n      core.exportVariable('test_jdk_path',\
          \ process.env[envVarName]);\n    } else if (version === \"${{ env.build_java_version\
          \ }}\") {\n      core.exportVariable('build_jdk_path', process.env[envVarName]);\n\
          \    }\n  }\n}\n"
    - continue-on-error: true
      env:
        JAVA_HOME: ${{ env.build_jdk_path }}
      name: Publish to Maven Local
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: build -xtest -xspotbugsMain -xjavadoc publishToMavenLocal
    - continue-on-error: true
      env:
        JAVA_HOME: ${{ env.build_jdk_path }}
      name: Integration test
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: runMavenTest -PtestJavaVersion=${{ matrix.test_java_version }}
          -Porg.gradle.java.installations.paths=${{ env.test_jdk_path }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        test_java_version:
        - 8
        - 11
        - 17
  test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Build JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: zulu
        java-version: ${{ env.build_java_version }}
    - continue-on-error: true
      name: Test
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: test -PallTests -PtestJavaVersion=${{ matrix.test_java_version
          }}
        cache-disabled: true
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        test_java_version:
        - 8
        - 11
        - 17
name: CI
on:
  repository_dispatch:
    types: trigger-ga___build.yml
